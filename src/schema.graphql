### This file was generated by Nexus Schema
### Do not make changes to this file directly


scalar DateTime

type Mutation {
  createOnePost(data: PostCreateInput!): Post!
}

type Post {
  conteudo: String!
  createdAt: DateTime!
  id: Int!
  publicado: Boolean!
  titulo: String!
  users: User!
}

input PostCreateInput {
  conteudo: String!
  createdAt: DateTime
  publicado: Boolean
  Review: ReviewCreateManyWithoutPostInput
  titulo: String!
  users: UserCreateOneWithoutPostsInput!
}

input PostCreateManyWithoutUsersInput {
  connect: [PostWhereUniqueInput!]
  connectOrCreate: [PostCreateOrConnectWithoutusersInput!]
  create: [PostCreateWithoutUsersInput!]
}

input PostCreateOneWithoutReviewInput {
  connect: PostWhereUniqueInput
  connectOrCreate: PostCreateOrConnectWithoutReviewInput
  create: PostCreateWithoutReviewInput
}

input PostCreateOrConnectWithoutReviewInput {
  create: PostCreateWithoutReviewInput!
  where: PostWhereUniqueInput!
}

input PostCreateOrConnectWithoutusersInput {
  create: PostCreateWithoutUsersInput!
  where: PostWhereUniqueInput!
}

input PostCreateWithoutReviewInput {
  conteudo: String!
  createdAt: DateTime
  publicado: Boolean
  titulo: String!
  users: UserCreateOneWithoutPostsInput!
}

input PostCreateWithoutUsersInput {
  conteudo: String!
  createdAt: DateTime
  publicado: Boolean
  Review: ReviewCreateManyWithoutPostInput
  titulo: String!
}

input PostWhereUniqueInput {
  id: Int
}

type Query {
  buscaAutoresPublicados(email: String!): [User]
  postsAprovados: [Post]
  reviews(after: ReviewWhereUniqueInput, before: ReviewWhereUniqueInput, first: Int, last: Int): [Review!]!
  user(where: UserWhereUniqueInput!): User
  users(after: UserWhereUniqueInput, before: UserWhereUniqueInput, first: Int, last: Int): [User!]!
}

type Review {
  aprovado: Boolean!
  createdAt: DateTime
  id: Int!
  nota: Int!
  post: Post!
  reviewer: User!
}

input ReviewCreateManyWithoutPostInput {
  connect: [ReviewWhereUniqueInput!]
  connectOrCreate: [ReviewCreateOrConnectWithoutpostInput!]
  create: [ReviewCreateWithoutPostInput!]
}

input ReviewCreateManyWithoutReviewerInput {
  connect: [ReviewWhereUniqueInput!]
  connectOrCreate: [ReviewCreateOrConnectWithoutreviewerInput!]
  create: [ReviewCreateWithoutReviewerInput!]
}

input ReviewCreateOrConnectWithoutpostInput {
  create: ReviewCreateWithoutPostInput!
  where: ReviewWhereUniqueInput!
}

input ReviewCreateOrConnectWithoutreviewerInput {
  create: ReviewCreateWithoutReviewerInput!
  where: ReviewWhereUniqueInput!
}

input ReviewCreateWithoutPostInput {
  aprovado: Boolean
  createdAt: DateTime
  nota: Int!
  reviewer: UserCreateOneWithoutReviewInput!
}

input ReviewCreateWithoutReviewerInput {
  aprovado: Boolean
  createdAt: DateTime
  nota: Int!
  post: PostCreateOneWithoutReviewInput!
}

input ReviewWhereUniqueInput {
  id: Int
}

type User {
  createdAt: DateTime!
  email: String!
  id: Int!
  nome: String!
  posts(after: PostWhereUniqueInput, before: PostWhereUniqueInput, first: Int, last: Int): [Post!]!
}

input UserCreateOneWithoutPostsInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutpostsInput
  create: UserCreateWithoutPostsInput
}

input UserCreateOneWithoutReviewInput {
  connect: UserWhereUniqueInput
  connectOrCreate: UserCreateOrConnectWithoutReviewInput
  create: UserCreateWithoutReviewInput
}

input UserCreateOrConnectWithoutpostsInput {
  create: UserCreateWithoutPostsInput!
  where: UserWhereUniqueInput!
}

input UserCreateOrConnectWithoutReviewInput {
  create: UserCreateWithoutReviewInput!
  where: UserWhereUniqueInput!
}

input UserCreateWithoutPostsInput {
  createdAt: DateTime
  email: String!
  nome: String!
  Review: ReviewCreateManyWithoutReviewerInput
}

input UserCreateWithoutReviewInput {
  createdAt: DateTime
  email: String!
  nome: String!
  posts: PostCreateManyWithoutUsersInput
}

input UserWhereUniqueInput {
  id: Int
}
