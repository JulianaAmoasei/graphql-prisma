/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */





declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
  PostCreateInput: { // input type
    conteudo: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    publicado?: boolean | null; // Boolean
    Review?: NexusGenInputs['ReviewCreateManyWithoutPostInput'] | null; // ReviewCreateManyWithoutPostInput
    titulo: string; // String!
    users: NexusGenInputs['UserCreateOneWithoutPostsInput']; // UserCreateOneWithoutPostsInput!
  }
  PostCreateManyWithoutUsersInput: { // input type
    connect?: NexusGenInputs['PostWhereUniqueInput'][] | null; // [PostWhereUniqueInput!]
    connectOrCreate?: NexusGenInputs['PostCreateOrConnectWithoutusersInput'][] | null; // [PostCreateOrConnectWithoutusersInput!]
    create?: NexusGenInputs['PostCreateWithoutUsersInput'][] | null; // [PostCreateWithoutUsersInput!]
  }
  PostCreateOneWithoutReviewInput: { // input type
    connect?: NexusGenInputs['PostWhereUniqueInput'] | null; // PostWhereUniqueInput
    connectOrCreate?: NexusGenInputs['PostCreateOrConnectWithoutReviewInput'] | null; // PostCreateOrConnectWithoutReviewInput
    create?: NexusGenInputs['PostCreateWithoutReviewInput'] | null; // PostCreateWithoutReviewInput
  }
  PostCreateOrConnectWithoutReviewInput: { // input type
    create: NexusGenInputs['PostCreateWithoutReviewInput']; // PostCreateWithoutReviewInput!
    where: NexusGenInputs['PostWhereUniqueInput']; // PostWhereUniqueInput!
  }
  PostCreateOrConnectWithoutusersInput: { // input type
    create: NexusGenInputs['PostCreateWithoutUsersInput']; // PostCreateWithoutUsersInput!
    where: NexusGenInputs['PostWhereUniqueInput']; // PostWhereUniqueInput!
  }
  PostCreateWithoutReviewInput: { // input type
    conteudo: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    publicado?: boolean | null; // Boolean
    titulo: string; // String!
    users: NexusGenInputs['UserCreateOneWithoutPostsInput']; // UserCreateOneWithoutPostsInput!
  }
  PostCreateWithoutUsersInput: { // input type
    conteudo: string; // String!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    publicado?: boolean | null; // Boolean
    Review?: NexusGenInputs['ReviewCreateManyWithoutPostInput'] | null; // ReviewCreateManyWithoutPostInput
    titulo: string; // String!
  }
  PostWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  ReviewCreateManyWithoutPostInput: { // input type
    connect?: NexusGenInputs['ReviewWhereUniqueInput'][] | null; // [ReviewWhereUniqueInput!]
    connectOrCreate?: NexusGenInputs['ReviewCreateOrConnectWithoutpostInput'][] | null; // [ReviewCreateOrConnectWithoutpostInput!]
    create?: NexusGenInputs['ReviewCreateWithoutPostInput'][] | null; // [ReviewCreateWithoutPostInput!]
  }
  ReviewCreateManyWithoutReviewerInput: { // input type
    connect?: NexusGenInputs['ReviewWhereUniqueInput'][] | null; // [ReviewWhereUniqueInput!]
    connectOrCreate?: NexusGenInputs['ReviewCreateOrConnectWithoutreviewerInput'][] | null; // [ReviewCreateOrConnectWithoutreviewerInput!]
    create?: NexusGenInputs['ReviewCreateWithoutReviewerInput'][] | null; // [ReviewCreateWithoutReviewerInput!]
  }
  ReviewCreateOrConnectWithoutpostInput: { // input type
    create: NexusGenInputs['ReviewCreateWithoutPostInput']; // ReviewCreateWithoutPostInput!
    where: NexusGenInputs['ReviewWhereUniqueInput']; // ReviewWhereUniqueInput!
  }
  ReviewCreateOrConnectWithoutreviewerInput: { // input type
    create: NexusGenInputs['ReviewCreateWithoutReviewerInput']; // ReviewCreateWithoutReviewerInput!
    where: NexusGenInputs['ReviewWhereUniqueInput']; // ReviewWhereUniqueInput!
  }
  ReviewCreateWithoutPostInput: { // input type
    aprovado?: boolean | null; // Boolean
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    nota: number; // Int!
    reviewer: NexusGenInputs['UserCreateOneWithoutReviewInput']; // UserCreateOneWithoutReviewInput!
  }
  ReviewCreateWithoutReviewerInput: { // input type
    aprovado?: boolean | null; // Boolean
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    nota: number; // Int!
    post: NexusGenInputs['PostCreateOneWithoutReviewInput']; // PostCreateOneWithoutReviewInput!
  }
  ReviewWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
  UserCreateOneWithoutPostsInput: { // input type
    connect?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
    connectOrCreate?: NexusGenInputs['UserCreateOrConnectWithoutpostsInput'] | null; // UserCreateOrConnectWithoutpostsInput
    create?: NexusGenInputs['UserCreateWithoutPostsInput'] | null; // UserCreateWithoutPostsInput
  }
  UserCreateOneWithoutReviewInput: { // input type
    connect?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
    connectOrCreate?: NexusGenInputs['UserCreateOrConnectWithoutReviewInput'] | null; // UserCreateOrConnectWithoutReviewInput
    create?: NexusGenInputs['UserCreateWithoutReviewInput'] | null; // UserCreateWithoutReviewInput
  }
  UserCreateOrConnectWithoutReviewInput: { // input type
    create: NexusGenInputs['UserCreateWithoutReviewInput']; // UserCreateWithoutReviewInput!
    where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
  }
  UserCreateOrConnectWithoutpostsInput: { // input type
    create: NexusGenInputs['UserCreateWithoutPostsInput']; // UserCreateWithoutPostsInput!
    where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
  }
  UserCreateWithoutPostsInput: { // input type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    email: string; // String!
    nome: string; // String!
    Review?: NexusGenInputs['ReviewCreateManyWithoutReviewerInput'] | null; // ReviewCreateManyWithoutReviewerInput
  }
  UserCreateWithoutReviewInput: { // input type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    email: string; // String!
    nome: string; // String!
    posts?: NexusGenInputs['PostCreateManyWithoutUsersInput'] | null; // PostCreateManyWithoutUsersInput
  }
  UserWhereUniqueInput: { // input type
    id?: number | null; // Int
  }
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenObjects {
  Mutation: {};
  Post: { // root type
    conteudo: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    publicado: boolean; // Boolean!
    titulo: string; // String!
  }
  Query: {};
  Review: { // root type
    aprovado: boolean; // Boolean!
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id: number; // Int!
    nota: number; // Int!
  }
  User: { // root type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    id: number; // Int!
    nome: string; // String!
  }
}

export interface NexusGenInterfaces {
}

export interface NexusGenUnions {
}

export type NexusGenRootTypes = NexusGenObjects

export type NexusGenAllTypes = NexusGenRootTypes & NexusGenScalars

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    createOnePost: NexusGenRootTypes['Post']; // Post!
  }
  Post: { // field return type
    conteudo: string; // String!
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    id: number; // Int!
    publicado: boolean; // Boolean!
    titulo: string; // String!
    users: NexusGenRootTypes['User']; // User!
  }
  Query: { // field return type
    buscaAutoresPublicados: Array<NexusGenRootTypes['User'] | null> | null; // [User]
    postsAprovados: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
    reviews: NexusGenRootTypes['Review'][]; // [Review!]!
    user: NexusGenRootTypes['User'] | null; // User
    users: NexusGenRootTypes['User'][]; // [User!]!
  }
  Review: { // field return type
    aprovado: boolean; // Boolean!
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: number; // Int!
    nota: number; // Int!
    post: NexusGenRootTypes['Post']; // Post!
    reviewer: NexusGenRootTypes['User']; // User!
  }
  User: { // field return type
    createdAt: NexusGenScalars['DateTime']; // DateTime!
    email: string; // String!
    id: number; // Int!
    nome: string; // String!
    posts: NexusGenRootTypes['Post'][]; // [Post!]!
  }
}

export interface NexusGenFieldTypeNames {
  Mutation: { // field return type name
    createOnePost: 'Post'
  }
  Post: { // field return type name
    conteudo: 'String'
    createdAt: 'DateTime'
    id: 'Int'
    publicado: 'Boolean'
    titulo: 'String'
    users: 'User'
  }
  Query: { // field return type name
    buscaAutoresPublicados: 'User'
    postsAprovados: 'Post'
    reviews: 'Review'
    user: 'User'
    users: 'User'
  }
  Review: { // field return type name
    aprovado: 'Boolean'
    createdAt: 'DateTime'
    id: 'Int'
    nota: 'Int'
    post: 'Post'
    reviewer: 'User'
  }
  User: { // field return type name
    createdAt: 'DateTime'
    email: 'String'
    id: 'Int'
    nome: 'String'
    posts: 'Post'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createOnePost: { // args
      data: NexusGenInputs['PostCreateInput']; // PostCreateInput!
    }
  }
  Query: {
    buscaAutoresPublicados: { // args
      email: string; // String!
    }
    reviews: { // args
      after?: NexusGenInputs['ReviewWhereUniqueInput'] | null; // ReviewWhereUniqueInput
      before?: NexusGenInputs['ReviewWhereUniqueInput'] | null; // ReviewWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
    user: { // args
      where: NexusGenInputs['UserWhereUniqueInput']; // UserWhereUniqueInput!
    }
    users: { // args
      after?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      before?: NexusGenInputs['UserWhereUniqueInput'] | null; // UserWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
  User: {
    posts: { // args
      after?: NexusGenInputs['PostWhereUniqueInput'] | null; // PostWhereUniqueInput
      before?: NexusGenInputs['PostWhereUniqueInput'] | null; // PostWhereUniqueInput
      first?: number | null; // Int
      last?: number | null; // Int
    }
  }
}

export interface NexusGenAbstractTypeMembers {
}

export interface NexusGenTypeInterfaces {
}

export type NexusGenObjectNames = keyof NexusGenObjects;

export type NexusGenInputNames = keyof NexusGenInputs;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = keyof NexusGenScalars;

export type NexusGenUnionNames = never;

export type NexusGenObjectsUsingAbstractStrategyIsTypeOf = never;

export type NexusGenAbstractsUsingStrategyResolveType = never;

export type NexusGenFeaturesConfig = {
  abstractTypeStrategies: {
    isTypeOf: false
    resolveType: true
    __typename: false
  }
}

export interface NexusGenTypes {
  context: {};
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  typeInterfaces: NexusGenTypeInterfaces;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractTypeMembers: NexusGenAbstractTypeMembers;
  objectsUsingAbstractStrategyIsTypeOf: NexusGenObjectsUsingAbstractStrategyIsTypeOf;
  abstractsUsingStrategyResolveType: NexusGenAbstractsUsingStrategyResolveType;
  features: NexusGenFeaturesConfig;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
  interface NexusGenPluginSchemaConfig {
  }
  interface NexusGenPluginArgConfig {
    /**
     * Whether the type can be null
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    nullable?: boolean
    /**
     * Whether the type is list of values, or just a single value.
     * If list is true, we assume the type is a list. If list is an array,
     * we'll assume that it's a list with the depth. The boolean indicates whether
     * the type is required (non-null), where true = nonNull, false = nullable.
     * @see declarativeWrappingPlugin
     */
    list?: true | boolean[]
    /**
     * Whether the type should be non null, `required: true` = `nullable: false`
     * @default (depends on whether nullability is configured in type or schema)
     * @see declarativeWrappingPlugin
     */
    required?: boolean
  }
}