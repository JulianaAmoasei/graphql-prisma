/**
 * This file was generated by Nexus Schema
 * Do not make changes to this file directly
 */





declare global {
  interface NexusGenCustomOutputProperties<TypeName extends string> {
    crud: NexusPrisma<TypeName, 'crud'>
    model: NexusPrisma<TypeName, 'model'>
  }
}

declare global {
  interface NexusGen extends NexusGenTypes {}
}

export interface NexusGenInputs {
}

export interface NexusGenEnums {
}

export interface NexusGenScalars {
  String: string
  Int: number
  Float: number
  Boolean: boolean
  ID: string
  DateTime: any
}

export interface NexusGenRootTypes {
  Mutation: {};
  Post: { // root type
    autor?: NexusGenRootTypes['User'] | null; // User
    conteudo?: string | null; // String
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: number | null; // Int
    publicado?: boolean | null; // Boolean
    reviews?: Array<NexusGenRootTypes['Review'] | null> | null; // [Review]
    titulo?: string | null; // String
  }
  Query: {};
  Review: { // root type
    aprovado?: boolean | null; // Boolean
    id?: number | null; // Int
    nota?: number | null; // Int
    post?: NexusGenRootTypes['Post'] | null; // Post
    reviewer?: NexusGenRootTypes['User'] | null; // User
  }
  User: { // root type
    createdAt?: NexusGenScalars['DateTime'] | null; // DateTime
    id?: number | null; // Int
    nome?: string | null; // String
    postsReviewed?: Array<NexusGenRootTypes['Review'] | null> | null; // [Review]
    postsWritten?: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
  }
}

export interface NexusGenAllTypes extends NexusGenRootTypes {
  String: NexusGenScalars['String'];
  Int: NexusGenScalars['Int'];
  Float: NexusGenScalars['Float'];
  Boolean: NexusGenScalars['Boolean'];
  ID: NexusGenScalars['ID'];
  DateTime: NexusGenScalars['DateTime'];
}

export interface NexusGenFieldTypes {
  Mutation: { // field return type
    createPost: NexusGenRootTypes['Post'] | null; // Post
  }
  Post: { // field return type
    autor: NexusGenRootTypes['User'] | null; // User
    conteudo: string | null; // String
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: number | null; // Int
    publicado: boolean | null; // Boolean
    reviews: Array<NexusGenRootTypes['Review'] | null> | null; // [Review]
    titulo: string | null; // String
  }
  Query: { // field return type
    posts: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
    users: Array<NexusGenRootTypes['User'] | null> | null; // [User]
  }
  Review: { // field return type
    aprovado: boolean | null; // Boolean
    id: number | null; // Int
    nota: number | null; // Int
    post: NexusGenRootTypes['Post'] | null; // Post
    reviewer: NexusGenRootTypes['User'] | null; // User
  }
  User: { // field return type
    createdAt: NexusGenScalars['DateTime'] | null; // DateTime
    id: number | null; // Int
    nome: string | null; // String
    postsReviewed: Array<NexusGenRootTypes['Review'] | null> | null; // [Review]
    postsWritten: Array<NexusGenRootTypes['Post'] | null> | null; // [Post]
  }
}

export interface NexusGenFieldTypeNames {
  Mutation: { // field return type name
    createPost: 'Post'
  }
  Post: { // field return type name
    autor: 'User'
    conteudo: 'String'
    createdAt: 'DateTime'
    id: 'Int'
    publicado: 'Boolean'
    reviews: 'Review'
    titulo: 'String'
  }
  Query: { // field return type name
    posts: 'Post'
    users: 'User'
  }
  Review: { // field return type name
    aprovado: 'Boolean'
    id: 'Int'
    nota: 'Int'
    post: 'Post'
    reviewer: 'User'
  }
  User: { // field return type name
    createdAt: 'DateTime'
    id: 'Int'
    nome: 'String'
    postsReviewed: 'Review'
    postsWritten: 'Post'
  }
}

export interface NexusGenArgTypes {
  Mutation: {
    createPost: { // args
      autor?: number | null; // Int
      conteudo?: string | null; // String
      titulo: string; // String!
    }
  }
}

export interface NexusGenAbstractResolveReturnTypes {
}

export interface NexusGenInheritedFields {}

export type NexusGenObjectNames = "Mutation" | "Post" | "Query" | "Review" | "User";

export type NexusGenInputNames = never;

export type NexusGenEnumNames = never;

export type NexusGenInterfaceNames = never;

export type NexusGenScalarNames = "Boolean" | "DateTime" | "Float" | "ID" | "Int" | "String";

export type NexusGenUnionNames = never;

export interface NexusGenTypes {
  context: any;
  inputTypes: NexusGenInputs;
  rootTypes: NexusGenRootTypes;
  argTypes: NexusGenArgTypes;
  fieldTypes: NexusGenFieldTypes;
  fieldTypeNames: NexusGenFieldTypeNames;
  allTypes: NexusGenAllTypes;
  inheritedFields: NexusGenInheritedFields;
  objectNames: NexusGenObjectNames;
  inputNames: NexusGenInputNames;
  enumNames: NexusGenEnumNames;
  interfaceNames: NexusGenInterfaceNames;
  scalarNames: NexusGenScalarNames;
  unionNames: NexusGenUnionNames;
  allInputTypes: NexusGenTypes['inputNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['scalarNames'];
  allOutputTypes: NexusGenTypes['objectNames'] | NexusGenTypes['enumNames'] | NexusGenTypes['unionNames'] | NexusGenTypes['interfaceNames'] | NexusGenTypes['scalarNames'];
  allNamedTypes: NexusGenTypes['allInputTypes'] | NexusGenTypes['allOutputTypes']
  abstractTypes: NexusGenTypes['interfaceNames'] | NexusGenTypes['unionNames'];
  abstractResolveReturn: NexusGenAbstractResolveReturnTypes;
}


declare global {
  interface NexusGenPluginTypeConfig<TypeName extends string> {
  }
  interface NexusGenPluginFieldConfig<TypeName extends string, FieldName extends string> {
  }
  interface NexusGenPluginSchemaConfig {
  }
}